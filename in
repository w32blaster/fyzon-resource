#!/bin/bash

set -e


exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# for jq
PATH=/usr/local/bin:$PATH

#
# Get parameters from the pipeline
#
payload=$(mktemp /tmp/resource-in.XXXXXX)

# read the payload from the input file
cat > "$payload" <&0
PAYLOAD_CONTENT=$(<$payload)

# use our functions
source /opt/resource/functions.sh

# parse payload JSON and extract properties,
# please refer to unit tests for comments
FYZON_URL=`extractUrl "$PAYLOAD_CONTENT"`
PROJECT_ID=`extractProjectId "$PAYLOAD_CONTENT"`
FORMAT=`extractFormat "$PAYLOAD_CONTENT"`
DELIMETER=`extractDelimeter "$PAYLOAD_CONTENT"`
COUNTRIES=`extractCountries "$PAYLOAD_CONTENT"`
arrCountries=($COUNTRIES)

cd "$1"

# Write debug file
{
  echo "Parsed values"
  cat "$payload"
  echo "URL: $FYZON_URL"
  echo "ProjectID: $PROJECT_ID"
  echo "Format: $FORMAT"
  echo "$COUNTRIES[@]"
} >> debug.txt


# And now, download all the files
for i in "${arrCountries[@]}"
do
    
    echo "Country: $i"

    fileName="${i##*|}"
    echo "File name: $fileName"

    urlDownloadFile=`buildUrlToFile "$i" "$FORMAT" "$PROJECT_ID" "$FYZON_URL" "$DELIMETER"`
    echo "URL to download: $urlDownloadFile"

    # and download
    curl "$urlDownloadFile" > $fileName
done


# ...and make a JSON to be passed as a resource output
jq -n "{
  \"version\": {
    \"url\": \"$FYZON_URL\"
  }
}" >&3

